<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="njnu.edu.back.dao.main.ProjectMapper">
    <select id="addProject" resultType="java.lang.String">
        insert into project values(default, #{projectName}, #{email}, now(), #{avatar}, #{layerManage, typeHandler = njnu.edu.back.common.utils.ArrayTypeHandler}, #{basemap}, #{isPublic}) returning id::text
    </select>

    <select id="fuzzyQuery" resultType="java.util.Map">
        select p.id as "id", project_name as "projectName", creator, create_time as "createTime", p.avatar as "avatar", layer_manage as "layerManage", basemap, is_public as "isPublic", name as "userName", u.avatar as "userAvatar"
        from project p, users u
        where u.email = p.creator
        <if test="keyword != ''">
            and project_name like #{keyword}
        </if>
        <if test="flag == 1">
            and is_public = true
        </if>
        <if test="flag == -1">
            and is_public = false
        </if>
        order by create_time asc
        limit #{size} offset #{start}
    </select>

    <select id="fuzzyQueryByEmail" resultType="java.util.Map">
        select p.id as "id", project_name as "projectName", creator, create_time as "createTime", p.avatar as "avatar", layer_manage as "layerManage", basemap, is_public as "isPublic"
        from project p
        where creator = #{email}
        order by create_time asc
        limit #{size} offset #{start}
    </select>

    <select id="fuzzyCountByEmail" resultType="java.lang.Integer">
        select count(*) from project
        where creator = #{email}
    </select>

    <select id="fuzzyCount" resultType="java.lang.Integer">
        select count(*) from project
        <if test="keyword != ''">
            where project_name like #{keyword}
            <if test="flag == 1">
                and is_public = true
            </if>
            <if test="flag == -1">
                and is_public = false
            </if>
        </if>
        <if test="keyword == ''">
            <if test="flag == 1">
                where is_public = true
            </if>
            <if test="flag == -1">
                where is_public = false
            </if>
        </if>
    </select>

    <select id="getProjectInfo" resultType="java.util.Map">
        select p.id as "id", project_name as "projectName", creator, create_time as "createTime", p.avatar as "avatar", layer_manage as "layerManage", basemap, is_public as "isPublic", name as "userName", u.avatar as "userAvatar"
        from project p, users u
        where p.id::text = #{projectId} and p.creator = u.email
    </select>

    <update id="updateLayer">
        update project set layer_manage = #{layers, typeHandler = njnu.edu.back.common.utils.ArrayTypeHandler} where id::text = #{projectId}
    </update>

    <select id="getLayersInfo" resultType="java.util.Map">
        select id, file_name as "fileName", visual_type as "visualType", visual_id as "visualId" from files
        where id::text in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <update id="updateBasemap">
        update project set basemap = #{basemap} where id::text = #{projectId}
    </update>

    <update id="updatePublicState">
        update project set is_public = #{flag} where id::text = #{projectId}
    </update>

    <select id="updateProjectInfo" resultType="java.lang.String">
        update project set project_name = #{projectName}, is_public = #{isPublic}
        <if test="avatar != ''">
            ,avatar = #{avatar}
        </if>
        where id::text = #{projectId}
        returning avatar
    </select>

    <delete id="deleteProject">
        delete from project where id::text = #{projectId}
    </delete>
</mapper>